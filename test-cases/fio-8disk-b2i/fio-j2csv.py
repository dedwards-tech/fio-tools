#! /usr/bin/python
import subprocess
import json

### autogenerated script using fio-gen.py
out_folder = "json";
# List of scripts to execute, in order


name_list = [ 'precondition',
'max-rrd-bw',
'max-rrd-iops',
'max-rwr-iops',
'max-rwr-bw',
'blkswp-rrd-00_1j-32qd-512',
'blkswp-rrd-01_1j-32qd-1k',
'blkswp-rrd-02_1j-32qd-2k',
'blkswp-rrd-03_1j-32qd-4k',
'blkswp-rrd-04_1j-32qd-8k',
'blkswp-rrd-05_1j-32qd-16k',
'blkswp-rrd-06_1j-32qd-32k',
'blkswp-rrd-07_1j-32qd-64k',
'blkswp-rrd-08_1j-32qd-128k',
'blkswp-rrd-09_1j-32qd-256k',
'blkswp-rrd-10_1j-32qd-512k',
'blkswp-rrd-11_8j-32qd-512',
'blkswp-rrd-12_8j-32qd-1k',
'blkswp-rrd-13_8j-32qd-2k',
'blkswp-rrd-14_8j-32qd-4k',
'blkswp-rrd-15_8j-32qd-8k',
'blkswp-rrd-16_8j-32qd-16k',
'blkswp-rrd-17_8j-32qd-32k',
'blkswp-rrd-18_8j-32qd-64k',
'blkswp-rrd-19_8j-32qd-128k',
'blkswp-rrd-20_8j-32qd-256k',
'blkswp-rrd-21_8j-32qd-512k',
'blkswp-rwr-00_1j-32qd-512',
'blkswp-rwr-01_1j-32qd-1k',
'blkswp-rwr-02_1j-32qd-2k',
'blkswp-rwr-03_1j-32qd-4k',
'blkswp-rwr-04_1j-32qd-8k',
'blkswp-rwr-05_1j-32qd-16k',
'blkswp-rwr-06_1j-32qd-32k',
'blkswp-rwr-07_1j-32qd-64k',
'blkswp-rwr-08_1j-32qd-128k',
'blkswp-rwr-09_1j-32qd-256k',
'blkswp-rwr-10_1j-32qd-512k',
'blkswp-rwr-11_8j-32qd-512',
'blkswp-rwr-12_8j-32qd-1k',
'blkswp-rwr-13_8j-32qd-2k',
'blkswp-rwr-14_8j-32qd-4k',
'blkswp-rwr-15_8j-32qd-8k',
'blkswp-rwr-16_8j-32qd-16k',
'blkswp-rwr-17_8j-32qd-32k',
'blkswp-rwr-18_8j-32qd-64k',
'blkswp-rwr-19_8j-32qd-128k',
'blkswp-rwr-20_8j-32qd-256k',
'blkswp-rwr-21_8j-32qd-512k',
'qdswp-rwr-00_1j-1qd-4k',
'qdswp-rwr-01_1j-2qd-4k',
'qdswp-rwr-02_1j-4qd-4k',
'qdswp-rwr-03_1j-8qd-4k',
'qdswp-rwr-04_1j-16qd-4k',
'qdswp-rwr-05_1j-32qd-4k',
'qdswp-rwr-06_1j-1qd-32k',
'qdswp-rwr-07_1j-2qd-32k',
'qdswp-rwr-08_1j-4qd-32k',
'qdswp-rwr-09_1j-8qd-32k',
'qdswp-rwr-10_1j-16qd-32k',
'qdswp-rwr-11_1j-32qd-32k',
'qdswp-rwr-12_1j-1qd-64k',
'qdswp-rwr-13_1j-2qd-64k',
'qdswp-rwr-14_1j-4qd-64k',
'qdswp-rwr-15_1j-8qd-64k',
'qdswp-rwr-16_1j-16qd-64k',
'qdswp-rwr-17_1j-32qd-64k',
'qdswp-rwr-18_8j-1qd-4k',
'qdswp-rwr-19_8j-2qd-4k',
'qdswp-rwr-20_8j-4qd-4k',
'qdswp-rwr-21_8j-8qd-4k',
'qdswp-rwr-22_8j-16qd-4k',
'qdswp-rwr-23_8j-32qd-4k',
'qdswp-rwr-24_8j-1qd-32k',
'qdswp-rwr-25_8j-2qd-32k',
'qdswp-rwr-26_8j-4qd-32k',
'qdswp-rwr-27_8j-8qd-32k',
'qdswp-rwr-28_8j-16qd-32k',
'qdswp-rwr-29_8j-32qd-32k',
'qdswp-rwr-30_8j-1qd-64k',
'qdswp-rwr-31_8j-2qd-64k',
'qdswp-rwr-32_8j-4qd-64k',
'qdswp-rwr-33_8j-8qd-64k',
'qdswp-rwr-34_8j-16qd-64k',
'qdswp-rwr-35_8j-32qd-64k',
'qdswp-rrd-00_1j-1qd-4k',
'qdswp-rrd-01_1j-2qd-4k',
'qdswp-rrd-02_1j-4qd-4k',
'qdswp-rrd-03_1j-8qd-4k',
'qdswp-rrd-04_1j-16qd-4k',
'qdswp-rrd-05_1j-32qd-4k',
'qdswp-rrd-06_1j-1qd-32k',
'qdswp-rrd-07_1j-2qd-32k',
'qdswp-rrd-08_1j-4qd-32k',
'qdswp-rrd-09_1j-8qd-32k',
'qdswp-rrd-10_1j-16qd-32k',
'qdswp-rrd-11_1j-32qd-32k',
'qdswp-rrd-12_1j-1qd-64k',
'qdswp-rrd-13_1j-2qd-64k',
'qdswp-rrd-14_1j-4qd-64k',
'qdswp-rrd-15_1j-8qd-64k',
'qdswp-rrd-16_1j-16qd-64k',
'qdswp-rrd-17_1j-32qd-64k',
'qdswp-rrd-18_8j-1qd-4k',
'qdswp-rrd-19_8j-2qd-4k',
'qdswp-rrd-20_8j-4qd-4k',
'qdswp-rrd-21_8j-8qd-4k',
'qdswp-rrd-22_8j-16qd-4k',
'qdswp-rrd-23_8j-32qd-4k',
'qdswp-rrd-24_8j-1qd-32k',
'qdswp-rrd-25_8j-2qd-32k',
'qdswp-rrd-26_8j-4qd-32k',
'qdswp-rrd-27_8j-8qd-32k',
'qdswp-rrd-28_8j-16qd-32k',
'qdswp-rrd-29_8j-32qd-32k',
'qdswp-rrd-30_8j-1qd-64k',
'qdswp-rrd-31_8j-2qd-64k',
'qdswp-rrd-32_8j-4qd-64k',
'qdswp-rrd-33_8j-8qd-64k',
'qdswp-rrd-34_8j-16qd-64k',
'qdswp-rrd-35_8j-32qd-64k' ];

# Parse each json output file for iops, bw and latency averages
csv_str  = "Workload,Read_BW,Read_IOPS,Write_BW,Write_IOPS\n";

print "Parsing output folder: %s ..." % (out_folder);
for fio_item in name_list:
   json_file = "%s/%s.json" % (out_folder, fio_item);
   in_file   = open(json_file, 'r');
   j_data    = json.load(in_file);
   in_file.close();

   # Grab data and save it to output file
   rd_bw    = j_data["jobs"][0]["read"]["bw"];
   rd_iops  = j_data["jobs"][0]["read"]["iops"];
   wr_bw    = j_data["jobs"][0]["write"]["bw"];
   wr_iops  = j_data["jobs"][0]["write"]["iops"];
   csv_str += "%s,%s,%s,%s,%s\n" % (fio_item, rd_bw, rd_iops, wr_bw, wr_iops);

out_file_name = "%s/summary.csv" % (out_folder);
print "Saving output to CSV: %s" % (out_file_name);
csv_file = open(out_file_name, "w");
csv_file.write(csv_str);
csv_file.close();

print "Summary complete."
